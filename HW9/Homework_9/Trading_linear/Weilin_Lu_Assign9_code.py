import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn.metrics import r2_score
from sklearn.linear_model import LinearRegression


print("Q2")

x = np.array([18.82,19.14,18.66,17.8,17.94])##year 1 W* 关盘价
# use to calculate the inear regression
y0 = np.array([27.23,26.24,27.55,28.11,26.68])##year 2 W*的关盘价

x_2 = x_2 = x[:, np.newaxis]
lin_reg = LinearRegression(fit_intercept=True)
lin_reg.fit(x_2, y0)

print("lin_reg.score", lin_reg.score(x_2, y0))
print("lin_reg.coef_", lin_reg.coef_)
print("lin_reg.intercept_", lin_reg.intercept_)
# use to calculate r2 for year2
#5天一个点画图
y = np.array([43.58,46.03,45.19,45.52,44.44])
degree = 9 ##W*的值
weights = np.polyfit(x, y, degree)
model = np.poly1d(weights)
predicted = model(x)
r2 = r2_score(y, predicted)
print("R2")
print(r2)

print("############################################################################################")

list = [1, 2, 3, 4, 5]
list2 = [5, 4, 3, 2, 1]

p1 = 0.0
p2 = 0.0

list3 = [None] * 100

x = 0
for i in range(100):
    x += 0.001
    list3[i] = round(x, 4)

p_long = 0.0
p_short = 0.0
money = 100
stock_num = 0.0
count = 0
count_long = 0
count_short = 0
#year 2 开盘价
list1 = [21.46,23.17,22.92,24.29,22.57,22.35,22,22.93,23.58,23.11,22.51,22.8,22,22.87,20.85,22.61,22.59,22.08,21.28,21.55,23.78,24.1,23.66,26.02,25.89,25.76,27.55,27.44,28.28,29,27.37,27.98,27.99,25.7,27.6,27.6,27,25.5,26.48,27.42,26.77,27.11,27.25,24.76,26.21,25.45,23.98,25,21.11,23.05,22.04,21.3,21.8,20,21.35,22.62,23.07,22.17,22.4,22.91,23.11,23.98,24.31,24.91,26.11,25.84,27.85,27.03,27,27,28.38,29.3,28.69,29.22,29.23,29.96,27.99,28.33,28.08,27.55,27.54,26.58,26.36,27.28,28.03,28.5,28.82,28.76,28.88,29.94,30.22,30.24,32,33.05,35.9,31.93,32.4,33.91,34.08,31.34,30.86,32.44,33.39,34.54,34.2,33.9,34.68,34.71,34.12,34.11,34.98,35.06,39.75,39.6,41.28,44.19,45,43.74,44.77,43.45,44.86,44.03,45.3,46.77,48.42,51.17,45.09,47.75,49.29,47.79,48.19,43.95,44.65,40.82,42.25,42.15,44,43.26,43.22,39.01,40.08,41.54,41.35,41.38,41.8,44.78,46,45.95,46.21,42.71,42,41.29,40.73,41.6,41.94,42.11,43.81,44.98,45,44.57,46.32,45.91,47.29,45.78,45.71,47.11,48.38,53,49,46.97,44.5,45.2,44.92,43.77,43.65,45,45.52,42.77,44.47,41.67,43.34,43.02,41.43,41.66,42.62,41.82,40.78,42.35,41.2,42.5,46.25,48.13,48.41,47.26,49.43,48.57,46.71,44.17,44.78,44,44.25,45.38,45.98,45.4,43.78,45,45.2,45.03,45.4,45.15,43.97,45.58,49,46.05,49.78,45.48,44.42,45.54,46.35,49.39,50,49.65,49.94,59.35,61.17,64,60.72,63.01,63.45,63.5,59.07,61.99,62.66,68.56,72.8,77.28,72.67,76.49,78.41,80.65,77.97,79.41,84.19,83.8,89.62,87,81.71,82.03,82.3,87.07,94.5]
#year 2 关盘价
list2 = [23.21,23.13,23.84,23.16,21.55,21.99,22.87,23.03,22.97,22.8,22.61,22.54,22.51,21.82,22.3,22.41,22.38,21.26,21.55,23.04,23.58,23.26,26.34,24.99,25.46,26.55,27.53,27.76,28.69,27.13,27.72,27.94,26.88,26.92,26.72,27.57,26.63,25.68,27.23,26.24,27.55,28.11,26.68,25.12,26,25.67,23.8,23.37,22.16,24.35,21.01,20.84,20.19,20.26,22.2,22.87,23.04,22.11,22.96,23.42,24.06,24.42,24.11,25.56,26.49,26.2,26.83,26.21,27.48,28.1,28.78,29,29.68,28.57,30.2,28.01,27.74,27.71,26.96,27.76,27.39,25.14,26.53,27.51,27.98,28.65,29,28.68,29.24,30.68,31.03,30.88,33.66,35.22,32.7,33.93,33.04,33.13,32.3,30.74,32.43,33.06,34.19,34.15,33.56,34.5,34.96,33.87,35.48,33.9,35.87,38.21,39.34,41.11,42.61,44.72,42.89,44.64,44.03,44.57,44.52,45.5,46.32,47.15,48.18,44.14,46.23,46.67,48.23,47.55,45.31,43.98,43.22,42.54,41.9,42.38,44.16,42.31,41,40.1,41.32,40.86,41.77,41.3,43.58,46.03,45.19,45.52,44.44,41.61,41,40.34,40.94,41.75,41.58,43.49,45.31,45.27,45.07,44.99,46.12,47,48.72,45.14,47.39,47.25,52.25,50.88,47.27,47.02,44.39,45.1,42.97,43.02,43.95,45.39,44.15,44.22,43.08,43.09,43.31,41.85,41.89,42.2,41.81,40.66,41.6,42.51,41.8,45.1,48.17,47.67,46.6,48.42,47.88,47.66,43.69,43.76,43.82,44,45.24,45.16,45.3,44.44,45,45.82,44.37,46.41,44.67,44.46,44.62,48.16,46.06,48.87,46.04,43.7,44.2,45.9,48.9,50.05,50.05,47.85,58.46,60,63.32,62.84,62.01,64.86,62.86,60.82,61.79,62.33,67.79,72.55,75.3,73.06,75.71,75.91,78.2,76.66,78.83,82.19,84.68,87.61,85.88,82.78,82.01,81.38,82.45,94.35,85.72]

for i in range(len(list1) - 1):
    if (list2[i] > list1[i]):
        stock_num = round(money / list2[i], 2)
        a = money
        money = 0.0
        money = stock_num * list1[i + 1]

        count_long += 1
        count += 1

        p1 = money - a
        p_long += p1

    elif (list2[i] < list1[i]):
        stock_num = round(money / list1[i], 2)
        b = money
        money = 0.0
        money = stock_num * list2[i]

        count_short += 1
        count += 1

        p2 = money - b
        p_short += p2

    else:
        continue

print("Q3:")
print("The number of long-position transaction: ", count_long)

print("The number of short-position transsaction: ", count_short)

print("############################################################################################")

print("Q4:")
print("The average P/L per long-position is ", round(p_long / count_long, 3))
print("The average P/L per short-position is ", round(p_short / count_short, 3))

print("############################################################################################")

print("Q5:")
print("The average number of days for long-position is: ", round(count_long / 26, 0))
print("The average number of days for short-position is: ", round(count_short / 26, 0))
